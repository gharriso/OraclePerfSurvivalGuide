ALTER TABLE COUNTRIES
 DROP PRIMARY KEY CASCADE;
DROP TABLE COUNTRIES CASCADE CONSTRAINTS;

CREATE TABLE COUNTRIES
(
  COUNTRY_ID            NUMBER                  NOT NULL,
  COUNTRY_ISO_CODE      CHAR(2 BYTE)            NOT NULL,
  COUNTRY_NAME          VARCHAR2(40 BYTE)       NOT NULL,
  COUNTRY_SUBREGION     VARCHAR2(30 BYTE)       NOT NULL,
  COUNTRY_SUBREGION_ID  NUMBER                  NOT NULL,
  COUNTRY_REGION        VARCHAR2(20 BYTE)       NOT NULL,
  COUNTRY_REGION_ID     NUMBER                  NOT NULL,
  COUNTRY_TOTAL         VARCHAR2(11 BYTE)       NOT NULL,
  COUNTRY_TOTAL_ID      NUMBER                  NOT NULL,
  COUNTRY_NAME_HIST     VARCHAR2(40 BYTE)
)

PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOLOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE COUNTRIES IS 'country dimension table (snowflake)';

COMMENT ON COLUMN COUNTRIES.COUNTRY_ID IS 'primary key';

COMMENT ON COLUMN COUNTRIES.COUNTRY_NAME IS 'country name';

COMMENT ON COLUMN COUNTRIES.COUNTRY_SUBREGION IS 'e.g. Western Europe, to allow hierarchies';

COMMENT ON COLUMN COUNTRIES.COUNTRY_REGION IS 'e.g. Europe, Asia';


ALTER TABLE CUSTOMERS
 DROP PRIMARY KEY CASCADE;
DROP TABLE CUSTOMERS CASCADE CONSTRAINTS;

CREATE TABLE CUSTOMERS
(
  CUST_ID                 NUMBER                NOT NULL,
  CUST_FIRST_NAME         VARCHAR2(20 BYTE)     NOT NULL,
  CUST_LAST_NAME          VARCHAR2(40 BYTE)     NOT NULL,
  CUST_GENDER             CHAR(1 BYTE)          NOT NULL,
  CUST_YEAR_OF_BIRTH      NUMBER(4)             NOT NULL,
  CUST_MARITAL_STATUS     VARCHAR2(20 BYTE),
  CUST_STREET_ADDRESS     VARCHAR2(40 BYTE)     NOT NULL,
  CUST_POSTAL_CODE        VARCHAR2(10 BYTE)     NOT NULL,
  CUST_CITY               VARCHAR2(30 BYTE)     NOT NULL,
  CUST_CITY_ID            NUMBER                NOT NULL,
  CUST_STATE_PROVINCE     VARCHAR2(40 BYTE)     NOT NULL,
  CUST_STATE_PROVINCE_ID  NUMBER                NOT NULL,
  COUNTRY_ID              NUMBER                NOT NULL,
  CUST_MAIN_PHONE_NUMBER  VARCHAR2(25 BYTE)     NOT NULL,
  CUST_INCOME_LEVEL       VARCHAR2(30 BYTE),
  CUST_CREDIT_LIMIT       NUMBER,
  CUST_EMAIL              VARCHAR2(30 BYTE),
  CUST_TOTAL              VARCHAR2(14 BYTE)     NOT NULL,
  CUST_TOTAL_ID           NUMBER                NOT NULL,
  CUST_SRC_ID             NUMBER,
  CUST_EFF_FROM           DATE,
  CUST_EFF_TO             DATE,
  CUST_VALID              VARCHAR2(1 BYTE)
)

PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOLOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE CUSTOMERS IS 'dimension table';

COMMENT ON COLUMN CUSTOMERS.CUST_ID IS 'primary key';

COMMENT ON COLUMN CUSTOMERS.CUST_FIRST_NAME IS 'first name of the customer';

COMMENT ON COLUMN CUSTOMERS.CUST_LAST_NAME IS 'last name of the customer';

COMMENT ON COLUMN CUSTOMERS.CUST_GENDER IS 'gender; low cardinality attribute';

COMMENT ON COLUMN CUSTOMERS.CUST_YEAR_OF_BIRTH IS 'customer year of birth';

COMMENT ON COLUMN CUSTOMERS.CUST_MARITAL_STATUS IS 'customer marital status; low cardinality attribute';

COMMENT ON COLUMN CUSTOMERS.CUST_STREET_ADDRESS IS 'customer street address';

COMMENT ON COLUMN CUSTOMERS.CUST_POSTAL_CODE IS 'postal code of the customer';

COMMENT ON COLUMN CUSTOMERS.CUST_CITY IS 'city where the customer lives';

COMMENT ON COLUMN CUSTOMERS.CUST_STATE_PROVINCE IS 'customer geography: state or province';

COMMENT ON COLUMN CUSTOMERS.COUNTRY_ID IS 'foreign key to the countries table (snowflake)';

COMMENT ON COLUMN CUSTOMERS.CUST_MAIN_PHONE_NUMBER IS 'customer main phone number';

COMMENT ON COLUMN CUSTOMERS.CUST_INCOME_LEVEL IS 'customer income level';

COMMENT ON COLUMN CUSTOMERS.CUST_CREDIT_LIMIT IS 'customer credit limit';

COMMENT ON COLUMN CUSTOMERS.CUST_EMAIL IS 'customer email id';


ALTER TABLE PROMOTIONS
 DROP PRIMARY KEY CASCADE;
DROP TABLE PROMOTIONS CASCADE CONSTRAINTS;

CREATE TABLE PROMOTIONS
(
  PROMO_ID              NUMBER(6)               NOT NULL,
  PROMO_NAME            VARCHAR2(30 BYTE)       NOT NULL,
  PROMO_SUBCATEGORY     VARCHAR2(30 BYTE)       NOT NULL,
  PROMO_SUBCATEGORY_ID  NUMBER                  NOT NULL,
  PROMO_CATEGORY        VARCHAR2(30 BYTE)       NOT NULL,
  PROMO_CATEGORY_ID     NUMBER                  NOT NULL,
  PROMO_COST            NUMBER(10,2)            NOT NULL,
  PROMO_BEGIN_DATE      DATE                    NOT NULL,
  PROMO_END_DATE        DATE                    NOT NULL,
  PROMO_TOTAL           VARCHAR2(15 BYTE)       NOT NULL,
  PROMO_TOTAL_ID        NUMBER                  NOT NULL
)

PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOLOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE PROMOTIONS IS 'dimension table without a PK-FK relationship with the facts table, to show outer join functionality';

COMMENT ON COLUMN PROMOTIONS.PROMO_SUBCATEGORY IS 'enables to investigate promotion hierarchies';

COMMENT ON COLUMN PROMOTIONS.PROMO_CATEGORY IS 'promotion category';

COMMENT ON COLUMN PROMOTIONS.PROMO_COST IS 'promotion cost, to do promotion effect calculations';

COMMENT ON COLUMN PROMOTIONS.PROMO_BEGIN_DATE IS 'promotion begin day';

COMMENT ON COLUMN PROMOTIONS.PROMO_END_DATE IS 'promotion end day';

COMMENT ON COLUMN PROMOTIONS.PROMO_ID IS 'primary key column';

COMMENT ON COLUMN PROMOTIONS.PROMO_NAME IS 'promotion description';


ALTER TABLE CHANNELS
 DROP PRIMARY KEY CASCADE;
DROP TABLE CHANNELS CASCADE CONSTRAINTS;

CREATE TABLE CHANNELS
(
  CHANNEL_ID        NUMBER                      NOT NULL,
  CHANNEL_DESC      VARCHAR2(20 BYTE)           NOT NULL,
  CHANNEL_CLASS     VARCHAR2(20 BYTE)           NOT NULL,
  CHANNEL_CLASS_ID  NUMBER                      NOT NULL,
  CHANNEL_TOTAL     VARCHAR2(13 BYTE)           NOT NULL,
  CHANNEL_TOTAL_ID  NUMBER                      NOT NULL
)

PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOLOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE CHANNELS IS 'small dimension table';

COMMENT ON COLUMN CHANNELS.CHANNEL_ID IS 'primary key column';

COMMENT ON COLUMN CHANNELS.CHANNEL_DESC IS 'e.g. telesales, internet, catalog';

COMMENT ON COLUMN CHANNELS.CHANNEL_CLASS IS 'e.g. direct, indirect';


ALTER TABLE PRODUCTS
 DROP PRIMARY KEY CASCADE;
DROP TABLE PRODUCTS CASCADE CONSTRAINTS;

CREATE TABLE PRODUCTS
(
  PROD_ID                NUMBER(6)              NOT NULL,
  PROD_NAME              VARCHAR2(50 BYTE)      NOT NULL,
  PROD_DESC              VARCHAR2(4000 BYTE)    NOT NULL,
  PROD_SUBCATEGORY       VARCHAR2(50 BYTE)      NOT NULL,
  PROD_SUBCATEGORY_ID    NUMBER                 NOT NULL,
  PROD_SUBCATEGORY_DESC  VARCHAR2(2000 BYTE)    NOT NULL,
  PROD_CATEGORY          VARCHAR2(50 BYTE)      NOT NULL,
  PROD_CATEGORY_ID       NUMBER                 NOT NULL,
  PROD_CATEGORY_DESC     VARCHAR2(2000 BYTE)    NOT NULL,
  PROD_WEIGHT_CLASS      NUMBER(3)              NOT NULL,
  PROD_UNIT_OF_MEASURE   VARCHAR2(20 BYTE),
  PROD_PACK_SIZE         VARCHAR2(30 BYTE)      NOT NULL,
  SUPPLIER_ID            NUMBER(6)              NOT NULL,
  PROD_STATUS            VARCHAR2(20 BYTE)      NOT NULL,
  PROD_LIST_PRICE        NUMBER(8,2)            NOT NULL,
  PROD_MIN_PRICE         NUMBER(8,2)            NOT NULL,
  PROD_TOTAL             VARCHAR2(13 BYTE)      NOT NULL,
  PROD_TOTAL_ID          NUMBER                 NOT NULL,
  PROD_SRC_ID            NUMBER,
  PROD_EFF_FROM          DATE,
  PROD_EFF_TO            DATE,
  PROD_VALID             VARCHAR2(1 BYTE)
)

PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOLOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

COMMENT ON TABLE PRODUCTS IS 'dimension table';

COMMENT ON COLUMN PRODUCTS.PROD_ID IS 'primary key';

COMMENT ON COLUMN PRODUCTS.PROD_NAME IS 'product name';

COMMENT ON COLUMN PRODUCTS.PROD_DESC IS 'product description';

COMMENT ON COLUMN PRODUCTS.PROD_SUBCATEGORY IS 'product subcategory';

COMMENT ON COLUMN PRODUCTS.PROD_SUBCATEGORY_DESC IS 'product subcategory description';

COMMENT ON COLUMN PRODUCTS.PROD_CATEGORY IS 'product category';

COMMENT ON COLUMN PRODUCTS.PROD_CATEGORY_DESC IS 'product category description';

COMMENT ON COLUMN PRODUCTS.PROD_WEIGHT_CLASS IS 'product weight class';

COMMENT ON COLUMN PRODUCTS.PROD_UNIT_OF_MEASURE IS 'product unit of measure';

COMMENT ON COLUMN PRODUCTS.PROD_PACK_SIZE IS 'product package size';

COMMENT ON COLUMN PRODUCTS.SUPPLIER_ID IS 'this column';

COMMENT ON COLUMN PRODUCTS.PROD_STATUS IS 'product status';

COMMENT ON COLUMN PRODUCTS.PROD_LIST_PRICE IS 'product list price';

COMMENT ON COLUMN PRODUCTS.PROD_MIN_PRICE IS 'product minimum price';


ALTER TABLE TIMES
 DROP PRIMARY KEY CASCADE;
DROP TABLE TIMES CASCADE CONSTRAINTS;

CREATE TABLE TIMES
(
  TIME_ID                 NUMBER               NOT NULL,
  TIMES_LEVEL              VARCHAR2(10) NOT NULL,
  DAY_ID                 VARCHAR2(9)      ,
  WEEK_ID     NUMBER              ,
  MONTH_ID    NUMBER              ,
  QUARTER_ID      NUMBER                ,
  YEAR_ID            NUMBER(4)          
)

;

COMMENT ON TABLE TIMES IS 'Time dimension table to support multiple hierarchies and materialized views';

COMMENT ON COLUMN TIMES.TIME_ID IS 'primary key; day date, finest granularity, CORRECT ORDER';

COMMENT ON COLUMN TIMES.DAY_NAME IS 'Monday to Sunday, repeating';

COMMENT ON COLUMN TIMES.DAY_NUMBER_IN_WEEK IS '1 to 7, repeating';

COMMENT ON COLUMN TIMES.DAY_NUMBER_IN_MONTH IS '1 to 31, repeating';

COMMENT ON COLUMN TIMES.CALENDAR_WEEK_NUMBER IS '1 to 53, repeating';

COMMENT ON COLUMN TIMES.FISCAL_WEEK_NUMBER IS '1 to 53, repeating';

COMMENT ON COLUMN TIMES.WEEK_ENDING_DAY IS 'date of last day in week, CORRECT ORDER';

COMMENT ON COLUMN TIMES.CALENDAR_MONTH_NUMBER IS '1 to 12, repeating';

COMMENT ON COLUMN TIMES.FISCAL_MONTH_NUMBER IS '1 to 12, repeating';

COMMENT ON COLUMN TIMES.CALENDAR_MONTH_DESC IS 'e.g. 1998-01, CORRECT ORDER';

COMMENT ON COLUMN TIMES.FISCAL_MONTH_DESC IS 'e.g. 1998-01, CORRECT ORDER';

COMMENT ON COLUMN TIMES.DAYS_IN_CAL_MONTH IS 'e.g. 28,31, repeating';

COMMENT ON COLUMN TIMES.DAYS_IN_FIS_MONTH IS 'e.g. 25,32, repeating';

COMMENT ON COLUMN TIMES.END_OF_CAL_MONTH IS 'last day of calendar month';

COMMENT ON COLUMN TIMES.END_OF_FIS_MONTH IS 'last day of fiscal month';

COMMENT ON COLUMN TIMES.CALENDAR_MONTH_NAME IS 'January to December, repeating';

COMMENT ON COLUMN TIMES.FISCAL_MONTH_NAME IS 'January to December, repeating';

COMMENT ON COLUMN TIMES.CALENDAR_QUARTER_DESC IS 'e.g. 1998-Q1, CORRECT ORDER';

COMMENT ON COLUMN TIMES.FISCAL_QUARTER_DESC IS 'e.g. 1999-Q3, CORRECT ORDER';

COMMENT ON COLUMN TIMES.DAYS_IN_CAL_QUARTER IS 'e.g. 88,90, repeating';

COMMENT ON COLUMN TIMES.DAYS_IN_FIS_QUARTER IS 'e.g. 88,90, repeating';

COMMENT ON COLUMN TIMES.END_OF_CAL_QUARTER IS 'last day of calendar quarter';

COMMENT ON COLUMN TIMES.END_OF_FIS_QUARTER IS 'last day of fiscal quarter';

COMMENT ON COLUMN TIMES.CALENDAR_QUARTER_NUMBER IS '1 to 4, repeating';

COMMENT ON COLUMN TIMES.FISCAL_QUARTER_NUMBER IS '1 to 4, repeating';

COMMENT ON COLUMN TIMES.CALENDAR_YEAR IS 'e.g. 1999, CORRECT ORDER';

COMMENT ON COLUMN TIMES.FISCAL_YEAR IS 'e.g. 1999, CORRECT ORDER';

COMMENT ON COLUMN TIMES.DAYS_IN_CAL_YEAR IS '365,366 repeating';

COMMENT ON COLUMN TIMES.DAYS_IN_FIS_YEAR IS 'e.g. 355,364, repeating';

COMMENT ON COLUMN TIMES.END_OF_CAL_YEAR IS 'last day of cal year';

COMMENT ON COLUMN TIMES.END_OF_FIS_YEAR IS 'last day of fiscal year';


DROP TABLE COSTS CASCADE CONSTRAINTS;

CREATE TABLE COSTS
(
  PROD_ID     NUMBER                            NOT NULL,
  TIME_ID     DATE                              NOT NULL,
  PROMO_ID    NUMBER                            NOT NULL,
  CHANNEL_ID  NUMBER                            NOT NULL,
  UNIT_COST   NUMBER(10,2)                      NOT NULL,
  UNIT_PRICE  NUMBER(10,2)                      NOT NULL
)

PCTUSED    0
PCTFREE    5
INITRANS   1
MAXTRANS   255
NOLOGGING
MONITORING;


DROP TABLE SALES CASCADE CONSTRAINTS;

CREATE TABLE SALES
(
  PROD_ID        NUMBER                         NOT NULL,
  CUST_ID        NUMBER                         NOT NULL,
  TIME_ID        number                           NOT NULL,
  CHANNEL_ID     NUMBER                         NOT NULL,
  PROMO_ID       NUMBER                         NOT NULL,
  QUANTITY_SOLD  NUMBER(10,2)                   NOT NULL,
  AMOUNT_SOLD    NUMBER(10,2)                   NOT NULL
)

PCTUSED    0
PCTFREE    5
INITRANS   1
MAXTRANS   255
MONITORING;

COMMENT ON TABLE SALES IS 'facts table, without a primary key; all rows are uniquely identified by the combination of all foreign keys';

COMMENT ON COLUMN SALES.PROD_ID IS 'FK to the products dimension table';

COMMENT ON COLUMN SALES.CUST_ID IS 'FK to the customers dimension table';

COMMENT ON COLUMN SALES.TIME_ID IS 'FK to the times dimension table';

COMMENT ON COLUMN SALES.CHANNEL_ID IS 'FK to the channels dimension table';

COMMENT ON COLUMN SALES.PROMO_ID IS 'promotion identifier, without FK constraint (intentionally) to show outer join optimization';

COMMENT ON COLUMN SALES.QUANTITY_SOLD IS 'product quantity sold with the transaction';

COMMENT ON COLUMN SALES.AMOUNT_SOLD IS 'invoiced amount to the customer';


CREATE UNIQUE INDEX CHANNELS_PK ON CHANNELS
(CHANNEL_ID)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE BITMAP INDEX COSTS_PROD_BIX ON COSTS
(PROD_ID)
  INITRANS   2
  MAXTRANS   255

NOPARALLEL;


CREATE UNIQUE INDEX COUNTRIES_PK ON COUNTRIES
(COUNTRY_ID)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE BITMAP INDEX CUSTOMERS_GENDER_BIX ON CUSTOMERS
(CUST_GENDER)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE BITMAP INDEX CUSTOMERS_MARITAL_BIX ON CUSTOMERS
(CUST_MARITAL_STATUS)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX CUSTOMERS_PK ON CUSTOMERS
(CUST_ID)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE BITMAP INDEX CUSTOMERS_YOB_BIX ON CUSTOMERS
(CUST_YEAR_OF_BIRTH)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX PRODUCTS_PK ON PRODUCTS
(PROD_ID)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX PRODUCTS_PROD_CAT_IX ON PRODUCTS
(PROD_CATEGORY)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE BITMAP INDEX PRODUCTS_PROD_STATUS_BIX ON PRODUCTS
(PROD_STATUS)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE INDEX PRODUCTS_PROD_SUBCAT_IX ON PRODUCTS
(PROD_SUBCATEGORY)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX PROMO_PK ON PROMOTIONS
(PROMO_ID)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE BITMAP INDEX SALES_CHANNEL_BIX ON SALES
(CHANNEL_ID)
  INITRANS   2
  MAXTRANS   255; 

NOPARALLEL;


CREATE BITMAP INDEX SALES_PROMO_BIX ON SALES
(PROMO_ID)
  INITRANS   2
  MAXTRANS   255

NOPARALLEL;


CREATE UNIQUE INDEX TIMES_PK ON TIMES
(TIME_ID)


PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


DROP SYNONYM BI.SALES;

CREATE SYNONYM BI.SALES FOR SALES;


DROP SYNONYM BI.PROMOTIONS;

CREATE SYNONYM BI.PROMOTIONS FOR PROMOTIONS;


DROP SYNONYM BI.PRODUCTS;

CREATE SYNONYM BI.PRODUCTS FOR PRODUCTS;


DROP SYNONYM BI.CUSTOMERS;

CREATE SYNONYM BI.CUSTOMERS FOR CUSTOMERS;


DROP SYNONYM BI.COSTS;

CREATE SYNONYM BI.COSTS FOR COSTS;


DROP SYNONYM BI.TIMES;

CREATE SYNONYM BI.TIMES FOR TIMES;


DROP SYNONYM BI.COUNTRIES;

CREATE SYNONYM BI.COUNTRIES FOR COUNTRIES;


DROP SYNONYM BI.CHANNELS;

CREATE SYNONYM BI.CHANNELS FOR CHANNELS;


ALTER TABLE COUNTRIES ADD (
  CONSTRAINT COUNTRIES_PK
 PRIMARY KEY
 (COUNTRY_ID)
    USING INDEX 
    
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE CUSTOMERS ADD (
  CONSTRAINT CUSTOMERS_PK
 PRIMARY KEY
 (CUST_ID)
    USING INDEX 
    
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE PROMOTIONS ADD (
  CONSTRAINT PROMO_PK
 PRIMARY KEY
 (PROMO_ID)
    USING INDEX 
    
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE CHANNELS ADD (
  CONSTRAINT CHANNELS_PK
 PRIMARY KEY
 (CHANNEL_ID)
    USING INDEX 
    
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE PRODUCTS ADD (
  CONSTRAINT PRODUCTS_PK
 PRIMARY KEY
 (PROD_ID)
    USING INDEX 
    
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE TIMES ADD (
  CONSTRAINT TIMES_PK
 PRIMARY KEY
 (TIME_ID)
    USING INDEX 
    
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE CUSTOMERS ADD (
  CONSTRAINT CUSTOMERS_COUNTRY_FK 
 FOREIGN KEY (COUNTRY_ID) 
 REFERENCES COUNTRIES (COUNTRY_ID));

ALTER TABLE COSTS ADD (
  CONSTRAINT COSTS_CHANNEL_FK 
 FOREIGN KEY (CHANNEL_ID) 
 REFERENCES CHANNELS (CHANNEL_ID) DISABLE,
  CONSTRAINT COSTS_TIME_FK 
 FOREIGN KEY (TIME_ID) 
 REFERENCES TIMES (TIME_ID),
  CONSTRAINT COSTS_PRODUCT_FK 
 FOREIGN KEY (PROD_ID) 
 REFERENCES PRODUCTS (PROD_ID),
  CONSTRAINT COSTS_PROMO_FK 
 FOREIGN KEY (PROMO_ID) 
 REFERENCES PROMOTIONS (PROMO_ID) DISABLE);

ALTER TABLE SALES ADD (
  CONSTRAINT SALES_CHANNEL_FK 
 FOREIGN KEY (CHANNEL_ID) 
 REFERENCES CHANNELS (CHANNEL_ID),
  CONSTRAINT SALES_TIME_FK 
 FOREIGN KEY (TIME_ID) 
 REFERENCES TIMES (TIME_ID),
  CONSTRAINT SALES_PRODUCT_FK 
 FOREIGN KEY (PROD_ID) 
 REFERENCES PRODUCTS (PROD_ID),
  CONSTRAINT SALES_CUSTOMER_FK 
 FOREIGN KEY (CUST_ID) 
 REFERENCES CUSTOMERS (CUST_ID),
  CONSTRAINT SALES_PROMO_FK 
 FOREIGN KEY (PROMO_ID) 
 REFERENCES PROMOTIONS (PROMO_ID));



